import transporter from "../config/emailConfig.js";
import "dotenv/config";

const sendContactEmail = async (req, res) => {
  try {
    const { name, email, subject, message } = req.body;

    const mailOptions = {
      from: `"${name}" <${process.env.EMAIL_USER}>`, // Sender name with your email
      to: process.env.EMAIL_RECEIVER, // Your email where you want to receive messages
      replyTo: email, // So replies go to the submitter
      subject: `New Contact Form: ${subject}`,
      text: `
        From: ${name} <${email}>
        Subject: ${subject}
        
        Message:
        ${message}
      `,
      html: `
  <div style="font-family: 'Arial', sans-serif; background: #f9fafb; padding: 30px; border-radius: 10px; color: #333;">
    <div style="background: #ffffff; border-radius: 10px; padding: 20px; box-shadow: 0 2px 8px rgba(0,0,0,0.05);">
      <h1 style="font-size: 24px; color: #4f46e5; margin-bottom: 20px; text-align: center;">New Contact Form Submission</h1>

      <p style="margin: 10px 0;"><strong>👤 From:</strong> ${name} (<a href="mailto:${email}" style="color: #4f46e5; text-decoration: none;">${email}</a>)</p>
      <p style="margin: 10px 0;"><strong>📝 Subject:</strong> ${subject}</p>

      <div style="margin-top: 20px; padding: 20px; background: #f1f5f9; border-radius: 8px;">
        <h3 style="margin-top: 0; color: #111827;">📩 Message:</h3>
        <p style="white-space: pre-wrap; line-height: 1.6; color: #374151;">${message}</p>
      </div>

      <div style="margin-top: 30px; text-align: center;">
        <a href="mailto:${email}" style="display: inline-block; background: #4f46e5; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: bold; box-shadow: 0 2px 5px rgba(0,0,0,0.15);">
          📧 Reply to ${name}
        </a>
      </div>
    </div>

    <p style="margin-top: 20px; font-size: 12px; color: #6b7280; text-align: center;">
      This is an automated email generated by your Contact Form.
    </p>
  </div>
`,
    };

    await transporter.sendMail(mailOptions);

    res.status(200).json({
      success: true,
      message: "Your message has been sent successfully!",
    });
  } catch (error) {
    console.error("Email sending error:", error);

    let errorMessage = "Failed to send message. Please try again later.";
    if (error.code === "EAUTH") {
      errorMessage = "Authentication failed. Please check email settings.";
    } else if (error.code === "EENVELOPE") {
      errorMessage = "Invalid email address provided.";
    }

    res.status(500).json({
      success: false,
      message: errorMessage,
      error: process.env.NODE_ENV === "development" ? error.message : undefined,
    });
  }
};

export { sendContactEmail };
